"""refactor_holidays_to_staff_holidays

Revision ID: d895eb3524af
Revises: 795b7f4e54e3
Create Date: 2025-10-15 17:39:31.839056

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd895eb3524af'
down_revision = '795b7f4e54e3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('staff_holidays',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('merchant_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('holiday_date', sa.Date(), nullable=False, comment='休假日期'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='休假名稱'),
    sa.Column('is_recurring', sa.Boolean(), nullable=False, comment='是否每年重複'),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='美甲師休假表'
    )
    op.create_index('idx_staff_holidays_merchant_date', 'staff_holidays', ['merchant_id', 'holiday_date'], unique=False)
    op.create_index('idx_staff_holidays_staff_date', 'staff_holidays', ['staff_id', 'holiday_date'], unique=False)
    op.create_index(op.f('ix_staff_holidays_merchant_id'), 'staff_holidays', ['merchant_id'], unique=False)
    op.create_index('uq_staff_holidays_staff_date', 'staff_holidays', ['staff_id', 'holiday_date'], unique=True)
    op.drop_index('idx_holidays_merchant_date', table_name='holidays')
    op.drop_index('uq_holidays_merchant_date', table_name='holidays')
    op.drop_table('holidays')
    op.alter_column('booking_locks', 'booking_id',
               existing_type=sa.UUID(),
               comment='關聯的預約 ID',
               existing_comment='關聯預約 ID',
               existing_nullable=True)
    op.create_table_comment(
        'booking_locks',
        '預約鎖定表（EXCLUDE 約束防重疊）',
        existing_comment='預約鎖定表',
        schema=None
    )
    op.alter_column('bookings', 'id',
               existing_type=sa.UUID(),
               comment='預約 ID (UUID)',
               existing_comment='預約 ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('bookings', 'merchant_id',
               existing_type=sa.UUID(),
               comment='商家 ID（租戶隔離）',
               existing_comment='商家 ID',
               existing_nullable=False)
    op.alter_column('bookings', 'status',
               existing_type=sa.VARCHAR(length=20),
               comment='狀態: pending/confirmed/completed/cancelled',
               existing_comment='狀態',
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('bookings', 'start_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='開始時間（含時區）',
               existing_comment='開始時間',
               existing_nullable=False)
    op.alter_column('bookings', 'end_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='結束時間（計算欄位，儲存以利查詢）',
               existing_comment='結束時間',
               existing_nullable=False)
    op.alter_column('bookings', 'customer',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='客戶資訊: {line_user_id, name, phone, email}',
               existing_comment='客戶資訊',
               existing_nullable=False)
    op.alter_column('bookings', 'items',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='預約項目陣列: [{service_id, service_name, ...}]',
               existing_comment='預約項目',
               existing_nullable=False)
    op.alter_column('bookings', 'total_price_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               comment='總價金額',
               existing_comment='總價',
               existing_nullable=False)
    op.alter_column('bookings', 'total_duration_minutes',
               existing_type=sa.INTEGER(),
               comment='總時長（分鐘）',
               existing_comment='總時長',
               existing_nullable=False)
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='建立時間',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('bookings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='更新時間',
               existing_nullable=True)
    op.alter_column('bookings', 'cancelled_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='取消時間',
               existing_nullable=True)
    op.alter_column('bookings', 'completed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='完成時間',
               existing_nullable=True)
    op.drop_index('idx_bookings_customer_line_id', table_name='bookings')
    op.create_index('idx_bookings_customer_line_id', 'bookings', ['merchant_id', sa.text("(customer->>'line_user_id')")], unique=False)
    op.drop_index('idx_merchants_slug', table_name='merchants')
    op.drop_index('idx_merchants_status_active', table_name='merchants', postgresql_where="((status)::text = 'active'::text)")
    op.drop_constraint('uq_merchants_slug', 'merchants', type_='unique')
    op.create_index('idx_merchants_status', 'merchants', ['status'], unique=False)
    op.create_index(op.f('ix_merchants_slug'), 'merchants', ['slug'], unique=True)
    op.alter_column('plans', 'features',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='方案功能: {max_bookings_per_month, max_staff, ...}',
               existing_comment='方案功能',
               existing_nullable=False)
    op.alter_column('service_options', 'service_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='所屬服務 ID',
               existing_nullable=False)
    op.alter_column('service_options', 'add_price_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               comment='加價',
               existing_comment='加價金額',
               existing_nullable=False)
    op.alter_column('services', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='服務 ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('services_id_seq'::regclass)"))
    op.alter_column('services', 'merchant_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='商家 ID',
               existing_nullable=False)
    op.alter_column('services', 'base_price_currency',
               existing_type=sa.VARCHAR(length=3),
               comment=None,
               existing_comment='幣別',
               existing_nullable=False,
               existing_server_default=sa.text("'TWD'::character varying"))
    op.alter_column('services', 'base_duration_minutes',
               existing_type=sa.INTEGER(),
               comment='基礎時長',
               existing_comment='基礎時長（分鐘）',
               existing_nullable=False)
    op.alter_column('staff', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='員工 ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('staff', 'merchant_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='商家 ID',
               existing_nullable=False)
    op.alter_column('staff_working_hours', 'staff_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='員工 ID',
               existing_nullable=False)
    op.create_index(op.f('ix_subscriptions_merchant_id'), 'subscriptions', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_users_merchant_id'), 'users', ['merchant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_merchant_id'), table_name='users')
    op.drop_index(op.f('ix_subscriptions_merchant_id'), table_name='subscriptions')
    op.alter_column('staff_working_hours', 'staff_id',
               existing_type=sa.INTEGER(),
               comment='員工 ID',
               existing_nullable=False)
    op.alter_column('staff', 'merchant_id',
               existing_type=sa.UUID(),
               comment='商家 ID',
               existing_nullable=False)
    op.alter_column('staff', 'id',
               existing_type=sa.INTEGER(),
               comment='員工 ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('services', 'base_duration_minutes',
               existing_type=sa.INTEGER(),
               comment='基礎時長（分鐘）',
               existing_comment='基礎時長',
               existing_nullable=False)
    op.alter_column('services', 'base_price_currency',
               existing_type=sa.VARCHAR(length=3),
               comment='幣別',
               existing_nullable=False,
               existing_server_default=sa.text("'TWD'::character varying"))
    op.alter_column('services', 'merchant_id',
               existing_type=sa.UUID(),
               comment='商家 ID',
               existing_nullable=False)
    op.alter_column('services', 'id',
               existing_type=sa.INTEGER(),
               comment='服務 ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('services_id_seq'::regclass)"))
    op.alter_column('service_options', 'add_price_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               comment='加價金額',
               existing_comment='加價',
               existing_nullable=False)
    op.alter_column('service_options', 'service_id',
               existing_type=sa.INTEGER(),
               comment='所屬服務 ID',
               existing_nullable=False)
    op.alter_column('plans', 'features',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='方案功能',
               existing_comment='方案功能: {max_bookings_per_month, max_staff, ...}',
               existing_nullable=False)
    op.drop_index(op.f('ix_merchants_slug'), table_name='merchants')
    op.drop_index('idx_merchants_status', table_name='merchants')
    op.create_unique_constraint('uq_merchants_slug', 'merchants', ['slug'])
    op.create_index('idx_merchants_status_active', 'merchants', ['status'], unique=False, postgresql_where="((status)::text = 'active'::text)")
    op.create_index('idx_merchants_slug', 'merchants', ['slug'], unique=False)
    op.drop_index('idx_bookings_customer_line_id', table_name='bookings')
    op.create_index('idx_bookings_customer_line_id', 'bookings', [sa.text("(customer ->> 'line_user_id'::text)")], unique=False)
    op.alter_column('bookings', 'completed_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='完成時間',
               existing_nullable=True)
    op.alter_column('bookings', 'cancelled_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='取消時間',
               existing_nullable=True)
    op.alter_column('bookings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='更新時間',
               existing_nullable=True)
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='建立時間',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('bookings', 'total_duration_minutes',
               existing_type=sa.INTEGER(),
               comment='總時長',
               existing_comment='總時長（分鐘）',
               existing_nullable=False)
    op.alter_column('bookings', 'total_price_amount',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               comment='總價',
               existing_comment='總價金額',
               existing_nullable=False)
    op.alter_column('bookings', 'items',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='預約項目',
               existing_comment='預約項目陣列: [{service_id, service_name, ...}]',
               existing_nullable=False)
    op.alter_column('bookings', 'customer',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='客戶資訊',
               existing_comment='客戶資訊: {line_user_id, name, phone, email}',
               existing_nullable=False)
    op.alter_column('bookings', 'end_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='結束時間',
               existing_comment='結束時間（計算欄位，儲存以利查詢）',
               existing_nullable=False)
    op.alter_column('bookings', 'start_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='開始時間',
               existing_comment='開始時間（含時區）',
               existing_nullable=False)
    op.alter_column('bookings', 'status',
               existing_type=sa.VARCHAR(length=20),
               comment='狀態',
               existing_comment='狀態: pending/confirmed/completed/cancelled',
               existing_nullable=False,
               existing_server_default=sa.text("'pending'::character varying"))
    op.alter_column('bookings', 'merchant_id',
               existing_type=sa.UUID(),
               comment='商家 ID',
               existing_comment='商家 ID（租戶隔離）',
               existing_nullable=False)
    op.alter_column('bookings', 'id',
               existing_type=sa.UUID(),
               comment='預約 ID',
               existing_comment='預約 ID (UUID)',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'booking_locks',
        '預約鎖定表',
        existing_comment='預約鎖定表（EXCLUDE 約束防重疊）',
        schema=None
    )
    op.alter_column('booking_locks', 'booking_id',
               existing_type=sa.UUID(),
               comment='關聯預約 ID',
               existing_comment='關聯的預約 ID',
               existing_nullable=True)
    op.create_table('holidays',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('merchant_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('holiday_date', sa.DATE(), autoincrement=False, nullable=False, comment='休假日期'),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False, comment='休假名稱'),
    sa.Column('is_recurring', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False, comment='是否每年重複'),
    sa.PrimaryKeyConstraint('id', name='holidays_pkey'),
    comment='休假日表'
    )
    op.create_index('uq_holidays_merchant_date', 'holidays', ['merchant_id', 'holiday_date'], unique=False)
    op.create_index('idx_holidays_merchant_date', 'holidays', ['merchant_id', 'holiday_date'], unique=False)
    op.drop_index('uq_staff_holidays_staff_date', table_name='staff_holidays')
    op.drop_index(op.f('ix_staff_holidays_merchant_id'), table_name='staff_holidays')
    op.drop_index('idx_staff_holidays_staff_date', table_name='staff_holidays')
    op.drop_index('idx_staff_holidays_merchant_date', table_name='staff_holidays')
    op.drop_table('staff_holidays')
    # ### end Alembic commands ###

